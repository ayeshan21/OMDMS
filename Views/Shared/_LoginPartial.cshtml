@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
        <li class="nav-item">
            @if (User.IsInRole("Admin"))
            {
                <a id="manage" class="nav-link text-dark" asp-controller="Admin" asp-action="Dashboard" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            }
            else
            {
                <a id="manage" class="nav-link text-dark" asp-controller="User" asp-action="UserProfileindex" title="Manage">Hello @UserManager.GetUserName(User)!</a>
            }
        </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
   <li class="nav-item">
            <a class="nav-link text-dark fs-5" id="login" asp-area="Identity" asp-page="/Account/Login"> <i class="fa-solid fa-right-to-bracket"></i>
               Login 
            </a>
   </li>
}
</ul>
